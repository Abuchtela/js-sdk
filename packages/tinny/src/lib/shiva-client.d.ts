// This file was generated by [ts-rs](https://github.com/Aleph-Alpha/ts-rs). Do not edit this file manually.
interface ContractAbis {
  litToken: string;
  erc20: string;
  backupRecovery: string;
  staking: string;
  stakingBalances: string;
  rateLimitNft: string;
  pkpnft: string;
  pubkeyRouter: string;
  pkpPermissions: string;
  pkpHelper: string;
  contractResolver: string;
  paymentDelegation: string;
}

interface ContractAddresses {
  litToken: string;
  backupRecovery: string;
  staking: string;
  stakingBalances: string;
  rateLimitNft: string;
  pkpnft: string;
  pubkeyRouter: string;
  pkpPermissions: string;
  pkpHelper: string;
  contractResolver: string;
  keyDeriver: string;
  paymentDelegation: string;
}

interface TestNetCreateRequest {
  nodeCount: number;
  pollingInterval: string;
  epochLength: number;
  customBuildPath: string | null;
  litActionServerCustomBuildPath: string | null;
  existingConfigPath: string | null;
  which: string | null;
  ecdsaRoundTimeout: string | null;
  enableRateLimiting: string | null;
}

interface TestNetInfo {
  contractAddresses: ContractAddresses;
  validatorAddresses: string[];
  contractResolverAbi: string;
  rpcUrl: string;
  epochLength: number;
  contractAbis: ContractAbis;
}

interface TestNetResponse<T> {
  testnetId: string;
  command: string;
  wasCanceled: boolean;
  body: T | null;
  lastStateObserved: string | null;
  messages: string[] | null;
  errors: string[] | null;
}

type TestNetState = 'Busy' | 'Active' | 'Mutating' | 'Shutdown' | 'UNKNOWN';

export {
  ContractAbis,
  ContractAddresses,
  TestNetCreateRequest,
  TestNetInfo,
  TestNetResponse,
  TestNetState,
};
