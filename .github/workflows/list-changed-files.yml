# This workflow is triggered by a PR being created or pushed to. It checks out the develop branch and gets the sha of the develop branch. It then checks for changes in the files and triggers the appropriate workflows based on the changes. It also checks the status of all the triggered workflows and fails the build if any of the workflows fail.  It runs the test against a new temporary branch which is created by merging the PR into develop.  This means that someone pushing to develop can break your PR even if you haven't changed anything!  This is a tradeoff to ensure that the tests are run against the latest code on develop.  If you want to run the tests against the code in your PR, you can run the tests locally.
name: master-trigger
on:
  workflow_call:
    outputs:
      lit_core_changed:
        description: 'lit_core_changed'
        value: ${{ jobs.list_changed_files.outputs.lit_core_changed }}

  workflow_dispatch: {}


jobs:
  get_base_commit_hash:
    runs-on: ubuntu-latest
    outputs:
      base_sha: ${{ steps.base_sha.outputs.base_sha }}
    steps:
      - name: Get branch name
        id: branch-name
        uses: tj-actions/branch-names@v7

      - name: Make sure we checked out develop, so we can get it's sha
        uses: actions/checkout@v4
        with:
          ref: ${{ steps.branch-name.outputs.base_ref_branch }}

      - name: Get sha of base branch
        id: base_sha
        run: |
          export BASE_SHA=$(git rev-parse HEAD)
          echo "Base sha is $BASE_SHA"
          echo "base_sha=$BASE_SHA" >> $GITHUB_OUTPUT

  list_changed_files:
    runs-on: ubuntu-latest
    needs: [get_base_commit_hash]
    outputs:
      lit_core_changed: ${{ steps.changed-files-yaml.outputs.lit_core_any_modified }}

    steps:
      - name: Checkout js-sdk
        uses: actions/checkout@v4

      - name: Print base sha
        run: |
          echo "Base sha is ${{ needs.get_base_commit_hash.outputs.base_sha }}"

      - name: Get changed files
        id: changed-files-yaml
        uses: tj-actions/changed-files@v41
        with:
          base_sha: ${{ needs.get_base_commit_hash.outputs.base_sha }}
          files_yaml: |
            lit_core:
              - packages/core/**
            any:
              - ./**

      - name: List all changed files
        run: |
          for file in ${{ steps.changed-files-yaml.outputs.any_all_modified_files }}; do
            echo "$file was changed"
          done
